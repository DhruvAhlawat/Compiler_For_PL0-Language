import { Inter } from 'next/font/google'
import { Metadata } from 'next'
import LargeHeading from '@/components/ui/LargeHeading'
// import { scrollArea } from '@/components/RecipeSlide'
import RecipeBox from '@/components/RecipeCard'
import { feedRecipes } from '@/public/data'

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Goodeats',
  description: 'What would you like to cook today',
}

export default function Home() {
  // return (
  //   <div className='relative h-screen flex items-center justify-center overflow-x-hidden'>
  //     <div className='container pt-32 max-w-full w-full h-full mx-2 md:mx-5'>
  //       <div className='h-full gap-6 flex flex-col justify-start lg:justify-center items-center lg:items-start'>
  //         <LargeHeading size='lg' className='text-black'>
  //           Get some nice recipes
  //         </LargeHeading>
  //       </div>
  //     </div>
  //   </div>
  // )
  return (
    <div className='relative h-screen flex items-center justify-center overflow-x-hidden scroll-m-2'>
      <LargeHeading> Ready to eat your heart out?</LargeHeading>
      
      <div className='snap-x'>
        <div className='scroll-ml-6 snap-start'>
          <RecipeBox recipeName= {feedRecipes[0].name} recipeAuthor={feedRecipes[0].username} recipeId={feedRecipes[0].recipeId} 
          recipeImage={feedRecipes[0].imageUrl} recipeDescription={feedRecipes[0].description} />
            
          </div>
      </div>

    </div>
  )
  return 
}

//next one

'use client'

import Image from 'next/image'
import LargeHeading from '@/ui/LargeHeading'
import Paragraph from '@/ui/Paragraph'
import type {RecipeCardProps} from '@/components/RecipeCard'
import Link from 'next/link'
import RecipeCard from '@/components/RecipeCard'
async function getAllRecipes() {
  const res = await fetch('http://127.0.0.1:5000/');
  return res.json();
}
// export async function scrollArea() {
//   let feedRecipes = await getAllRecipes();
//   return (
//     <div className='relative h-screen flex items-center justify-center overflow-x-hidden'>
//       <div className='container pt-32 max-w-7xl mx-auto w-full h-full'>
//         <div className='h-full gap-8 flex flex-col justify-start items-center'>
//           <div className='flex flex-col items-center gap-6'>
//             <LargeHeading>
//               Browse Trending Recipes
//             </LargeHeading>
//           </div>
//           <div className='h-full flex flex-col justify-start place-items-start px-8'>
//             {feedRecipes.map((recipe: RecipeCardProps) => (
//               <Link href={`/recipes/${recipe.recipeId}`} key={recipe.recipeId} className='mb-8'>
//                 <RecipeCard recipeId={recipe.recipeId} recipeName={recipe.recipeName} recipeImage={recipe.recipeImage} recipeAuthor={recipe.recipeAuthor} recipeDescription={recipe.recipeDescription} />
//               </Link>
//             ))}
//           </div>
//         </div>
//       </div>
//     </div>

//   )
// }



export function RecipeBox({recipeName, recipeAuthor, recipeImage, recipeDescription, recipeId}: RecipeCardProps) {
  return (
    <div key={recipeId} className='flex flex-row md:flex-row gap-4 w-full max-w-7xl'>
      <Image src={recipeImage} alt={recipeName} width={200} height={200} className='rounded-lg' />
      <div className='flex flex-row'>
        <div className='flex flex-row w-full justify-between pb-1'>
          <LargeHeading className='text-start' size='xs'>
            {recipeName}
          </LargeHeading>
        </div>
        <Paragraph className='text-start font-bold'>
          {recipeAuthor}
        </Paragraph>
        <Paragraph size='sm' className='w-full text-start'>
          {recipeDescription}
        </Paragraph>
      </div>
    </div>
  )
}
